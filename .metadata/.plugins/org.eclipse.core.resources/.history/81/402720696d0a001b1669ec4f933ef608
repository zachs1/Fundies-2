import tester.*;

interface IEntertainment {
  //compute the total price of this Entertainment
  double totalPrice();
  
  //computes the minutes of entertainment of this IEntertainment
  int duration();
  
  //produce a String that shows the name and price of this IEntertainment
  String format();
  
  //is this IEntertainment the same as that one?
  boolean sameEntertainment(IEntertainment that);
  
  // is this IEntertainment a magazine?
  boolean isMagazine();
  
  // is this IEntertainment a podcast?
  boolean isPodcast();
  
  // is this IEntertainment a TV Series?
  boolean isTVSeries();
  
  // is this IEntertainment the same is that Magazine?
  boolean sameMagazine(Magazine that);
  
  // is this IEntertainment the same is that TVSeries?
  boolean sameTVSeries(TVSeries that);
   
  // is this IEntertainment the same is that Podcast?
  boolean samePodcast(Podcast that);
}

abstract class AEntertainment implements IEntertainment {
  String name;
  double price;
  int installments;
  
  AEntertainment(String name, double price, int installments) {
    this.name = name;
    this.price = price;
    this.installments = installments;
  }

  //compute the total price of this Entertainment
  public double totalPrice() {
    /* TEMPLATE: everything in the template for AEntertainment*/
    return this.price * this.installments;
  }
  
  //computes the minutes of entertainment of this IEntertainment
  public int duration() {
    /* TEMPLATE: everything in the template for AEntertainment*/
    return 50 * this.installments;
  }
  
  //produce a String that shows the name and price of this IEntertainment
  public String format() {
    /* TEMPLATE: everything in the template for AEntertainment*/
    return this.name + ", " + this.price + ".";
  }
  
  //is this IEntertainment the same as that one?
  public boolean sameEntertainment(IEntertainment that) {
    return false;
  };
  
  // is this IEntertainment a magazine?
  public boolean isMagazine() {return false;}
  
  // is this IEntertainment a TV Series?
  public boolean isTVSeries() {return false;}
  
  // is this IEntertainment a podcast?
  public boolean isPodcast() {return false;}
  
  //is this IEntertainment the same is that Magazine?
  public boolean sameMagazine(Magazine that) {return false;}
  
  // is this IEntertainment the same is that TVSeries?
  public boolean sameTVSeries(TVSeries that) {return false;}
  
  // is this IEntertainment the same is that Podcast?
  public boolean samePodcast(Podcast that) {return false;}
  
}

class Magazine extends AEntertainment {
  String genre;
  int pages;
  
  /*
  TEMPLATE
  FIELDS:
  ... this.name ...                               -- String
  ... this.price ...                              -- double
  ... this.installments ...                       -- int
  ... this.genre ...                              -- String
  ... this.pages ...                              -- int
  METHODS:
  ... this.totalPrice() ...                       -- double
  ... this.duration() ...                         -- int
  ... this.format() ...                           -- String
  ... this.sameEntertainment(IEntertainment) ...  -- boolean
  ... this.isMagazine() ...                       -- boolean
  ... this.isTVSeries() ...                       -- boolean
  ... this.isPodcast() ...                        -- boolean
  ... this.sameMagazine() ...                     -- boolean
  ... this.sameTVSeries() ...                     -- boolean
  ... this.samePodcast() ...                      -- boolean
  
  METHODS FOR FIELDS:
  */
  
  Magazine(String name, double price, String genre, int pages, int installments) {
    super(name, price, installments);
    this.pages = pages;
    this.genre = genre;
  }
  
  @Override
  public int duration() {
    /* TEMPLATE: everything in the template for Magazine*/
    return 5 * this.pages * this.installments;
  }
  
  @Override
  public boolean sameEntertainment(IEntertainment that) {
    /* TEMPLATE: everything in the template for Magazine, plus
     * Fields on parameters:
     * ... that.name ...              -- String
     * ... that.price ...             -- double
     * ... that.installments ...      -- int
     * Methods on parameters:
     * ... this.totalPrice() ...                       -- double
     * ... this.duration() ...                         -- int
     * ... this.format() ...                           -- String
     * ... this.sameEntertainment(IEntertainment) ...  -- boolean
     * ... this.isMagazine() ...                       -- boolean
     * ... this.isTVSeries() ...                       -- boolean
     * ... this.isPodcast() ...                        -- boolean
     * ... this.sameMagazine() ...                     -- boolean
     * ... this.sameTVSeries() ...                     -- boolean
     * ... this.samePodcast() ...                      -- boolean*/
    return that.sameMagazine(this);
  }
  
  @Override
  public boolean isMagazine() {
    /* TEMPLATE: everything in the template for Magazine*/
    return true;
  }
  
  @Override
  public boolean sameMagazine(Magazine that) {
    /* TEMPLATE: everything in the template for AEntertainment, plus
     * Fields on parameters:
     * ... that.name ...              -- String
     * ... that.price ...             -- double
     * ... that.installments ...      -- int
     * ... that.pages ...             -- int
     * ... that.genre ...             -- String
     * Methods on parameters:
     * ... this.totalPrice() ...                       -- double
     * ... this.duration() ...                         -- int
     * ... this.format() ...                           -- String
     * ... this.sameEntertainment(IEntertainment) ...  -- boolean
     * ... this.isMagazine() ...                       -- boolean
     * ... this.isTVSeries() ...                       -- boolean
     * ... this.isPodcast() ...                        -- boolean
     * ... this.sameMagazine() ...                     -- boolean
     * ... this.sameTVSeries() ...                     -- boolean
     * ... this.samePodcast() ...                      -- boolean*/
    return this.name == that.name
        && this.price == that.price
        && this.installments == that.installments
        && this.genre == that.genre
        && this.pages == that.pages;
  }
}

class TVSeries extends AEntertainment {
  String corporation;

  /*
  TEMPLATE
  FIELDS:
  ... this.name ...                               -- String
  ... this.price ...                              -- double
  ... this.installments ...                       -- int
  ... this.corporation ...                        -- String
  METHODS:
  ... this.totalPrice() ...                       -- double
  ... this.duration() ...                         -- int
  ... this.format() ...                           -- String
  ... this.sameEntertainment(IEntertainment) ...  -- boolean
  ... this.isMagazine() ...                       -- boolean
  ... this.isTVSeries() ...                       -- boolean
  ... this.isPodcast() ...                        -- boolean
  ... this.sameMagazine() ...                     -- boolean
  ... this.sameTVSeries() ...                     -- boolean
  ... this.samePodcast() ...                      -- boolean
  
  METHODS FOR FIELDS:
  */
  
  TVSeries(String name, double price, int installments, String corporation) {
    super(name, price, installments);
    this.corporation = corporation;
  }
  
  @Override
  public boolean sameEntertainment(IEntertainment that) {
    /* TEMPLATE: everything in the template for TVSeries, plus
     * Fields on parameters:
     * ... that.name ...              -- String
     * ... that.price ...             -- double
     * ... that.installments ...      -- int
     * Methods on parameters:
     * ... this.totalPrice() ...                       -- double
     * ... this.duration() ...                         -- int
     * ... this.format() ...                           -- String
     * ... this.sameEntertainment(IEntertainment) ...  -- boolean
     * ... this.isMagazine() ...                       -- boolean
     * ... this.isTVSeries() ...                       -- boolean
     * ... this.isPodcast() ...                        -- boolean
     * ... this.sameMagazine() ...                     -- boolean
     * ... this.sameTVSeries() ...                     -- boolean
     * ... this.samePodcast() ...                      -- boolean*/
    return that.sameTVSeries(this);
  }
  
  @Override
  public boolean isTVSeries() {
    /* TEMPLATE: everything in the template for TVSeries*/
    return true;
  }
  
  @Override
  public boolean sameTVSeries(TVSeries that) {
    /* TEMPLATE: everything in the template for TVSeries, plus
     * Fields on parameters:
     * ... that.name ...              -- String
     * ... that.price ...             -- double
     * ... that.installments ...      -- int
     * ... that.corporation ...       -- String
     * Methods on parameters:
     * ... this.totalPrice() ...                       -- double
     * ... this.duration() ...                         -- int
     * ... this.format() ...                           -- String
     * ... this.sameEntertainment(IEntertainment) ...  -- boolean
     * ... this.isMagazine() ...                       -- boolean
     * ... this.isTVSeries() ...                       -- boolean
     * ... this.isPodcast() ...                        -- boolean
     * ... this.sameMagazine() ...                     -- boolean
     * ... this.sameTVSeries() ...                     -- boolean
     * ... this.samePodcast() ...                      -- boolean*/
    return this.name == that.name
        && this.price == that.price
        && this.corporation == that.corporation
        && this.installments == that.installments;
  }
}

class Podcast extends AEntertainment {
  /*
  TEMPLATE
  FIELDS:
  ... this.name ...                               -- String
  ... this.price ...                              -- double
  ... this.installments ...                       -- int
  METHODS:
  ... this.totalPrice() ...                       -- double
  ... this.duration() ...                         -- int
  ... this.format() ...                           -- String
  ... this.sameEntertainment(IEntertainment) ...  -- boolean
  ... this.isMagazine() ...                       -- boolean
  ... this.isTVSeries() ...                       -- boolean
  ... this.isPodcast() ...                        -- boolean
  ... this.sameMagazine() ...                     -- boolean
  ... this.sameTVSeries() ...                     -- boolean
  ... this.samePodcast() ...                      -- boolean
  
  METHODS FOR FIELDS:
  */
  
  Podcast(String name, double price, int installments) {
    super(name, price, installments);
  }
  
  @Override
  public boolean sameEntertainment(IEntertainment that) {
    /* TEMPLATE: everything in the template for Podcast, plus
     * Fields on parameters:
     * ... that.name ...              -- String
     * ... that.price ...             -- double
     * ... that.installments ...      -- int
     * Methods on parameters:
     * ... this.totalPrice() ...                       -- double
     * ... this.duration() ...                         -- int
     * ... this.format() ...                           -- String
     * ... this.sameEntertainment(IEntertainment) ...  -- boolean
     * ... this.isMagazine() ...                       -- boolean
     * ... this.isTVSeries() ...                       -- boolean
     * ... this.isPodcast() ...                        -- boolean
     * ... this.sameMagazine() ...                     -- boolean
     * ... this.sameTVSeries() ...                     -- boolean
     * ... this.samePodcast() ...                      -- boolean*/
    return that.samePodcast(this);
  }
  
  @Override
  public boolean isPodcast() {
    /* TEMPLATE: everything in the template for Podcast*/
    return true;
  }
  
  @Override
  public boolean samePodcast(Podcast that) {
    /* TEMPLATE: everything in the template for AEntertainment, plus
     * Fields on parameters:
     * ... that.name ...              -- String
     * ... that.price ...             -- double
     * ... that.installments ...      -- int
     * Methods on parameters:
     * ... this.totalPrice() ...                       -- double
     * ... this.duration() ...                         -- int
     * ... this.format() ...                           -- String
     * ... this.sameEntertainment(IEntertainment) ...  -- boolean
     * ... this.isMagazine() ...                       -- boolean
     * ... this.isTVSeries() ...                       -- boolean
     * ... this.isPodcast() ...                        -- boolean
     * ... this.sameMagazine() ...                     -- boolean
     * ... this.sameTVSeries() ...                     -- boolean
     * ... this.samePodcast() ...                      -- boolean*/
    return this.name == that.name
        && this.price == that.price
        && this.installments == that.installments;
  }
}

class ExamplesEntertainment {
  IEntertainment rollingStone = new Magazine("Rolling Stone", 2.55, "Music", 60, 12);
  IEntertainment houseOfCards = new TVSeries("House of Cards", 5.25, 13, "Netflix");
  IEntertainment serial = new Podcast("Serial", 0.0, 8);
  Magazine gq = new Magazine("GQ", 2.5, "lifestyle", 60, 4);
  TVSeries theBoys = new TVSeries("The Boys", 5.3, 16, "Amazon Prime");
  Podcast revisionist = new Podcast("Revisionist History", 0.0, 30);
  
  //testing total price method
  boolean testTotalPrice(Tester t) {
      return t.checkInexact(this.rollingStone.totalPrice(), 2.55*12, .0001) 
      && t.checkInexact(this.houseOfCards.totalPrice(), 5.25*13, .0001)
      && t.checkInexact(this.serial.totalPrice(), 0.0, .0001)
      && t.checkInexact(this.theBoys.totalPrice(), 5.3*16, .0001)
      && t.checkInexact(this.gq.totalPrice(), 2.5*4, .0001)
      && t.checkInexact(this.revisionist.totalPrice(), 0.0, .0001);
  }
  
  boolean testDuration(Tester t) {
    return true;
  }
  
  boolean testSameEntertainment(Tester t) {
    return true;
  }
  
  boolean testFormat(Tester t) {
    return true;
  }
  
  
  boolean testIsPodcast(Tester t) {
    return true;
  }
  
  boolean testIsMagazine(Tester t) {
    return true;
  }
  
  boolean testIsTVSeries(Tester t) {
    return true;
  }
  
  boolean testSameMagazine(Tester t) {
    return t.checkExpect(this.rollingStone.sameMagazine(this.rollingStone), true)
        && t.checkExpect(this.rollingStone.sameMagazine(gq), false)
        && t.checkExpect(this.serial.sameMagazine(this.rollingStone), false)
        && t.checkExpect(this.theBoys.sameMagazine(this.gq), false);
  }
  
  boolean testSameTVSeries(Tester t) {
    return true;
  }
  
  boolean testSamePodcast(Tester t) {
    return true;
  }
  
}