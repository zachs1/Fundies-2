import tester.*;

interface IBagelRecipe {}

class Utils {
  double checkEqual(double val1, double val2, String message) {
    if(val1 == val2) {
      return val1;
    }
    else {
      throw new IllegalArgumentException(message);
    }
  }
}


class BagelRecipe implements IBagelRecipe {
  double weightFlour;
  double weightWater;
  double weightYeast;
  double weightSalt;
  double weightMalt;
  
  BagelRecipe(double weightFlour, double weightWater, double weightYeast, double weightSalt,
      double weightMalt) {
    this.weightFlour = new Utils().checkEqual(weightYeast, weightWater, 
        "Flour weight (" + Double.toString(weightFlour)
        + ") must equal water weight (" + Double.toString(weightWater) + ")");
    this.weightWater = weightWater;
      
    this.weightYeast = new Utils().checkEqual(weightYeast, weightMalt, 
        "Yeast weight (" + Double.toString(weightYeast)
        + ") must equal malt weight (" + Double.toString(weightMalt) + ")");
    this.weightMalt = weightMalt;
    
    if((weightSalt + weightYeast) == weightFlour / 20) {
      this.weightSalt = weightSalt;
    }
    else {
      throw new IllegalArgumentException("Sum of salt weight and yeast weight (" + 
          Double.toString(weightSalt + weightYeast) + ") must be 1/20th of flour weight (" +
          Double.toString(weightFlour / 20) + ")");
    }
    
  }
  
  BagelRecipe(double weightFlour, double weightYeast) {
    this.weightFlour = weightFlour;
    this.weightYeast = weightYeast;
    this.weightWater = weightFlour;
    this.weightMalt = weightYeast;
    this.weightSalt = weightFlour / 20 - weightYeast;
  }
  
  BagelRecipe(double cupsFlour, double tspYeast, double tspSalt) {
    this(cupsFlour * 4.25, 
        cupsFlour * 4.25, 
        tspYeast / 48 * 5, 
        tspSalt / 48 * 10,
        tspYeast / 48 * 5);
  }
  
}

class ExamplesBagelRecipe {
  boolean testBagelRecipe(Tester t) {
    return t.checkConstructorException(new IllegalArgumentException(
            "Flour weight (10.0) must equal water weight (5.0)"), 
            "BagelRecipe", 
            10.0, 5.0, 1.0, 1.0, 1.0)
        && t.checkConstructorException(new IllegalArgumentException(
            "Yeast weight (4.2) must equal malt weight (4.1)"),
            "BagelRecipe",
            10.0, 10.0, 4.2, 4.4, 4.1)
        && t.checkConstructorException(new IllegalArgumentException(
            "Sum of salt weight and yeast weight (6.2) must be 1/20th of flour weight (1.0)"),
            "BagelRecipe",
            20.0, 20.0, 4.2, 2.0, 4.2)
        && t.checkConstructorException(new IllegalArgumentException(
            "Sum of salt weight and yeast weight (0.3125) must be 1/20th of flour weight (0.2125)"),
            "BagelRecipe",
            1.0, 1.0, 1.0);
  }
}

